{
  "name": "serverless-saas-iac-analyzer",
  "version": "1.0.0",
  "description": "Multi-tenant SaaS IaC Analyzer with AWS SBT",
  "scripts": {
    "build": "npm run build --workspaces",
    "test": "npm run test --workspaces",
    "lint": "npm run lint --workspaces",
    "type-check": "npm run type-check --workspaces",
    "deploy": "./scripts/deploy.sh",
    "setup": "./scripts/setup-env.sh",
    "clean": "npm run clean --workspaces"
  },
  "workspaces": [
    "infrastructure",
    "backend/shared",
    "backend/functions/*",
    "frontend"
  ],
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.10.0",
    "typescript": "^5.3.0",
    "jest": "^29.7.0",
    "eslint": "^8.56.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "eslint-plugin-aws-cdk": "^1.7.0",
    "prettier": "^3.1.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{js,jsx,json,md}": [
      "prettier --write"
    ]
  }
}

# infrastructure/package.json


# infrastructure/.eslintrc.js


# infrastructure/tsconfig.json


# backend/shared/package.json

# Lambda function package.json template


# frontend/package.json


# setup-project.sh (更新版)
#!/bin/bash

echo "Setting up Serverless SaaS IaC Analyzer project with Node.js 20.x..."

# Check Node.js version
NODE_VERSION=$(node --version)
echo "Current Node.js version: $NODE_VERSION"

if [[ ! "$NODE_VERSION" =~ ^v20\. ]]; then
    echo "Warning: Node.js 20.x is recommended. Current version: $NODE_VERSION"
    echo "Please consider upgrading to Node.js 20.x"
fi

# Create project structure
echo "Creating project structure..."
mkdir -p {infrastructure/{lib,bin,test},backend/{shared,functions},frontend/src,scripts,docs,tests}

# Create CDK specific directories
mkdir -p infrastructure/lib/constructs
mkdir -p backend/functions/{tenant-validator,iac-analyzer,account-scanner,report-generator,admin-functions}

# Initialize package.json files
echo "Initializing package configurations..."

# Copy package.json templates (created above) to appropriate directories

# Initialize Git repository
git init
git add .
git commit -m "Initial project setup with Node.js 20.x and CDK v2"

# Setup Husky for pre-commit hooks
echo "Setting up Git hooks..."
npx husky install
npx husky add .husky/pre-commit "npx lint-staged"

echo "Project structure created successfully!"
echo ""
echo "Next steps:"
echo "1. Run 'npm install' to install dependencies"
echo "2. Configure AWS credentials (aws configure)"
echo "3. Bootstrap CDK: 'cd infrastructure && npx cdk bootstrap'"
echo "4. Update environment variables in .env files"
echo "5. Run 'npm run type-check' to verify TypeScript setup"
echo "6. Run 'npm run lint' to verify ESLint configuration"
echo "7. Run 'npm run test' to verify Jest setup"
echo ""
echo "Development ready with:"
echo "- Node.js 20.x runtime"
echo "- TypeScript 5.x"
echo "- AWS CDK v2"
echo "- ESLint with CDK plugin"
echo "- Jest testing framework"
echo "- Prettier code formatting"
echo "- Husky pre-commit hooks"
